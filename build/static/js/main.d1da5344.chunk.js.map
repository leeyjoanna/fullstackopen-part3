{"version":3,"sources":["components/SearchForm.js","components/PersonForm.js","services/contacts.js","components/Display.js","App.js","index.js"],"names":["SearchForm","newSearch","handleNewSearch","value","onChange","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","delete","updatedObject","put","Numbers","person","setShowSearch","setPersons","persons","setErrorMessage","name","number","onClick","window","confirm","contactService","updatedContacts","filter","catch","error","setTimeout","location","reload","removeContact","Display","showSearch","map","Message","message","className","Error","errorMessage","App","useState","setNewName","setNewNumber","setNewSearch","setMessage","useEffect","initialContacts","event","target","temp","toUpperCase","search","exists","preventDefault","findIndex","index","find","i","personID","changedContact","returnedContact","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1da5344.chunk.js","sourcesContent":["import React from 'react'\n\nconst SearchForm = ({newSearch, handleNewSearch}) => {\n    return (\n        <div>\n            <h2>Search</h2>\n            <form>\n                filter: shown with <input value={newSearch} onChange={handleNewSearch}></input>\n            </form>\n        </div>\n    )\n}\n\n\nexport default SearchForm","import React from 'react'\n\nconst PersonForm = ({addPerson, newName, handleNewName, newNumber, handleNewNumber}) =>{\n\n    return(\n        <div>\n            <h2>Add a new entry: </h2>\n            <form onSubmit={addPerson}> \n            <div>\n                name: <input value={newName} onChange={handleNewName}/>\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNewNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport default PersonForm","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updatedObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedObject)\n    return request.then(response => response.data)\n}\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default{ getAll, create, remove, update}","import React from 'react'\nimport contactService from '../services/contacts'\n\nconst removeContact = (name, id, setShowSearch, setPersons, persons, setErrorMessage) => {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)){\n        contactService\n            .remove(id)\n            .then(updatedContacts => {\n                setShowSearch(persons.filter(person => person.id !== id))\n                setPersons(persons.filter(person => person.id !== id))\n            })\n            .catch(error => {\n                setErrorMessage(`unable to update, ${name} already was deleted`)\n                setTimeout(() => {\n                  setErrorMessage(null)\n                  window.location.reload()\n                  }, 4000)\n              })\n    }\n    \n}\n\nconst Numbers = ({person, setShowSearch, setPersons, persons, setErrorMessage}) => {\n\n    return (\n      <div>\n        {person.id}- {person.name}: {person.number}    \n        <button onClick={() => removeContact(person.name, person.id, setShowSearch, setPersons, persons, setErrorMessage)}>Delete</button>\n      </div>\n    )\n  }\n\nconst Display = ({showSearch, setShowSearch, setPersons, persons, setErrorMessage}) => {\n\n    return(\n        <div>\n            <h2>Numbers</h2>\n            {showSearch.map(person => <Numbers key={person.id} person={person} setShowSearch = {setShowSearch} setPersons = {setPersons} persons = {persons} setErrorMessage = {setErrorMessage}/>)} \n        </div>\n    )\n\n}\n\nexport default Display","import './App.css';\nimport React, { useState, useEffect } from 'react'\nimport SearchForm from './components/SearchForm'\nimport PersonForm from './components/PersonForm'\nimport Display from './components/Display'\nimport contactService from './services/contacts'\n\nconst Message = ({message}) => {\n  if (message === null){\n    return (\n      <div></div>\n    )\n  }\n    return (\n      <div className = 'message'>\n        {message}\n      </div>\n    )\n  }\n\nconst Error = ({errorMessage}) => {\n  if (errorMessage === null){\n    return(\n      <div></div>\n    )\n  }\n  \n  return (\n    <div className = 'error'>\n      {errorMessage}\n    </div>\n  )\n}\n  \n  \n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ showSearch, setShowSearch ] = useState([])\n  const [ message, setMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n        setShowSearch(initialContacts)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    // Checks for existing person.name then adds new obj\n    let exists = persons.findIndex(function(person,index){\n      if(person.name.toUpperCase() === newName.toUpperCase()){\n        return true;\n      }\n      return false;\n    })\n    if (exists !== -1){\n      if(window.confirm(`${newName} already exists, would you like to update their number?`)){\n        const person = persons.find(i => i.name.toUpperCase() === newName.toUpperCase() )\n        const personID = person.id\n        const changedContact = {...person, number: newNumber }\n\n        contactService\n          .update(personID, changedContact)\n          .then(returnedContact => {\n            setPersons(persons.map(person => person.id === personID ? changedContact : person))\n            setShowSearch(persons.map(person => person.id === personID ? changedContact : person))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setErrorMessage('unable to update!')\n            setTimeout(() => {\n              setErrorMessage(null)\n              window.location.reload()\n              }, 4000)\n          })\n      }\n      else{\n        setNewName('')\n        setNewNumber('')\n      }\n    }\n    else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n      contactService\n        .create(personObject)\n        .then(updatedContacts => {\n          setPersons(persons.concat(updatedContacts))\n          setShowSearch(persons.concat(updatedContacts))\n          setNewNumber('')\n          setNewName('')\n          setMessage(\n            `${newName} has been added!`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n        .catch(error => {\n          setErrorMessage('unable to add!')\n          setTimeout(() => {\n            setErrorMessage(null)\n            window.location.reload()\n            }, 4000)\n        })    \n    }\n  }\n\n  // Handles state updates in INPUT\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleNewSearch = (event) => {\n    setNewSearch(event.target.value)\n    let temp = event.target.value\n    function exists(person){\n      if (person.name.toUpperCase().search(temp.toUpperCase()) !== -1){\n        return true\n      }\n    }\n    setShowSearch(persons.filter(person => exists(person)))\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Message message = {message}/>\n      <Error errorMessage = {errorMessage}/>\n      <SearchForm newSearch = {newSearch} handleNewSearch = {handleNewSearch}/>\n      <PersonForm addPerson = {addPerson} newName = {newName} handleNewName = {handleNewName} newNumber = {newNumber} handleNewNumber = {handleNewNumber}/>\n      <Display showSearch = {showSearch} persons = {persons} setShowSearch = {setShowSearch} setPersons = {setPersons} setErrorMessage = {setErrorMessage} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n)"],"sourceRoot":""}